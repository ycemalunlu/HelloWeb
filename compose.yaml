services:
  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    env_file:
      - .env
    healthcheck:
      test: "pg_isready --host=$DATABASE_HOST"
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: >
      sh -c "python manage.py collectstatic --noinput &&
      gunicorn HelloWeb.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    volumes:
      - static_volume:/webapp/staticfiles
      # comment for production
      - .:/webapp
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    profiles:
      - production

  web-dev:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/webapp
      - static_volume:/webapp/staticfiles
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    profiles:
      - development

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - static_volume:/webapp/staticfiles
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      web:
        condition: service_started
    profiles:
      - production

volumes:
  static_volume:


